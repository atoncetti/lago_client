defmodule LagoClient.CreditNoteObject do
  @moduledoc """
  Provides struct and type for a CreditNoteObject
  """
  use LagoClient.Encoder

  @type t :: %__MODULE__{
          __info__: map,
          applied_taxes: [LagoClient.CreditNoteAppliedTaxObject.t()] | nil,
          balance_amount_cents: integer,
          coupons_adjustment_amount_cents: integer,
          created_at: DateTime.t(),
          credit_amount_cents: integer,
          credit_status: String.t() | nil,
          currency: String.t(),
          description: String.t() | nil,
          file_url: String.t() | nil,
          invoice_number: String.t(),
          issuing_date: Date.t(),
          items: [LagoClient.CreditNoteItemObject.t()] | nil,
          lago_id: String.t(),
          lago_invoice_id: String.t(),
          number: String.t(),
          reason: String.t(),
          refund_amount_cents: integer,
          refund_status: String.t() | nil,
          self_billed: boolean | nil,
          sequential_id: integer,
          sub_total_excluding_taxes_amount_cents: integer,
          taxes_amount_cents: integer,
          taxes_rate: number,
          total_amount_cents: integer,
          updated_at: DateTime.t()
        }

  defstruct [
    :__info__,
    :applied_taxes,
    :balance_amount_cents,
    :coupons_adjustment_amount_cents,
    :created_at,
    :credit_amount_cents,
    :credit_status,
    :currency,
    :description,
    :file_url,
    :invoice_number,
    :issuing_date,
    :items,
    :lago_id,
    :lago_invoice_id,
    :number,
    :reason,
    :refund_amount_cents,
    :refund_status,
    :self_billed,
    :sequential_id,
    :sub_total_excluding_taxes_amount_cents,
    :taxes_amount_cents,
    :taxes_rate,
    :total_amount_cents,
    :updated_at
  ]

  @doc false
  @spec __fields__(atom) :: keyword
  def __fields__(type \\ :t)

  def __fields__(:t) do
    [
      applied_taxes: [{LagoClient.CreditNoteAppliedTaxObject, :t}],
      balance_amount_cents: :integer,
      coupons_adjustment_amount_cents: :integer,
      created_at: {:string, :date_time},
      credit_amount_cents: :integer,
      credit_status: {:enum, ["available", "consumed", "voided", nil]},
      currency:
        {:enum,
         [
           "AED",
           "AFN",
           "ALL",
           "AMD",
           "ANG",
           "AOA",
           "ARS",
           "AUD",
           "AWG",
           "AZN",
           "BAM",
           "BBD",
           "BDT",
           "BGN",
           "BIF",
           "BMD",
           "BND",
           "BOB",
           "BRL",
           "BSD",
           "BWP",
           "BYN",
           "BZD",
           "CAD",
           "CDF",
           "CHF",
           "CLF",
           "CLP",
           "CNY",
           "COP",
           "CRC",
           "CVE",
           "CZK",
           "DJF",
           "DKK",
           "DOP",
           "DZD",
           "EGP",
           "ETB",
           "EUR",
           "FJD",
           "FKP",
           "GBP",
           "GEL",
           "GIP",
           "GMD",
           "GNF",
           "GTQ",
           "GYD",
           "HKD",
           "HNL",
           "HRK",
           "HTG",
           "HUF",
           "IDR",
           "ILS",
           "INR",
           "ISK",
           "JMD",
           "JPY",
           "KES",
           "KGS",
           "KHR",
           "KMF",
           "KRW",
           "KYD",
           "KZT",
           "LAK",
           "LBP",
           "LKR",
           "LRD",
           "LSL",
           "MAD",
           "MDL",
           "MGA",
           "MKD",
           "MMK",
           "MNT",
           "MOP",
           "MRO",
           "MUR",
           "MVR",
           "MWK",
           "MXN",
           "MYR",
           "MZN",
           "NAD",
           "NGN",
           "NIO",
           "NOK",
           "NPR",
           "NZD",
           "PAB",
           "PEN",
           "PGK",
           "PHP",
           "PKR",
           "PLN",
           "PYG",
           "QAR",
           "RON",
           "RSD",
           "RUB",
           "RWF",
           "SAR",
           "SBD",
           "SCR",
           "SEK",
           "SGD",
           "SHP",
           "SLL",
           "SOS",
           "SRD",
           "STD",
           "SZL",
           "THB",
           "TJS",
           "TOP",
           "TRY",
           "TTD",
           "TWD",
           "TZS",
           "UAH",
           "UGX",
           "USD",
           "UYU",
           "UZS",
           "VND",
           "VUV",
           "WST",
           "XAF",
           "XCD",
           "XOF",
           "XPF",
           "YER",
           "ZAR",
           "ZMW"
         ]},
      description: {:union, [{:string, :generic}, :null]},
      file_url: {:union, [{:string, :generic}, :null]},
      invoice_number: {:string, :generic},
      issuing_date: {:string, :date},
      items: [{LagoClient.CreditNoteItemObject, :t}],
      lago_id: {:string, :uuid},
      lago_invoice_id: {:string, :uuid},
      number: {:string, :generic},
      reason:
        {:enum,
         [
           "duplicated_charge",
           "product_unsatisfactory",
           "order_change",
           "order_cancellation",
           "fraudulent_charge",
           "other"
         ]},
      refund_amount_cents: :integer,
      refund_status: {:enum, ["pending", "succeeded", "failed", nil]},
      self_billed: :boolean,
      sequential_id: :integer,
      sub_total_excluding_taxes_amount_cents: :integer,
      taxes_amount_cents: :integer,
      taxes_rate: :number,
      total_amount_cents: :integer,
      updated_at: {:string, :date_time}
    ]
  end
end
